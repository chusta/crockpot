---

  - name: ssh | set key_path
    set_fact:
      key_path: "{{playbook_dir}}/resources/keys"
  - name: ssh | old known hosts
    file:
      path: /etc/ssh/ssh_known_hosts
      state: absent
  - name: ssh | add known hosts
    known_hosts:
      path: /etc/ssh/ssh_known_hosts
      name: "{{item}}"
      key: "{{item}} {{lookup('file', '{{key_path}}/{{item}}/sshd.pub')}}"
      state: present
    with_items: "{{groups['honeypot']}}"

  - name: create group
    group:
      name: crockpot
      gid: 9999
      state: present

  - name: create user
    user:
      name: crockpot
      group: crockpot
      shell: /bin/false
      home: /crockpot
      uid: 9999
      state: present

  - name: honeypot directories
    file:
      path: "{{item}}"
      state: directory
    with_items:
    - /honeypot

  - name: download geolite2 db
    get_url:
      url: http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz
      mode: 0644
      dest: /crockpot
      owner: crockpot
      group: crockpot
    register: geodb

  - name: gunzip geolite2
    command: gunzip -f /crockpot/GeoLite2-City.mmdb.gz
    when: geodb.changed

  - name: locate old logstash configs
    find:
      path: /etc/logstash/conf.d
      pattern: ssh_*.conf
    register: old_cfg

  - name: remove old logstash configs
    file:
      path: "{{item.path}}"
      state: absent
    with_items: "{{old_cfg.files}}"

  - name: copy logstash config
    copy:
      src: collector.log.out.conf
      dest: /etc/logstash/conf.d

  - name: create keys directory
    file:
      path: /crockpot/keys
      state: directory

  - name: copy ssh tunnel keys
    copy:
      src: "{{playbook_dir}}/resources/keys/{{item}}/tun.key"
      dest: "/crockpot/keys/{{item}}.tun.key"
      mode: 0600
      owner: crockpot
      group: crockpot
    with_items: "{{groups['honeypot']}}"

  - name: add ssh known_hosts
    known_hosts:
      name: "{{item}}"
      key: "{{item}} {{lookup('file', '{{playbook_dir}}/resources/keys/{{item}}/sshd.pub')}}"
    with_items: "{{groups['honeypot']}}"
    become: crockpot

  - name: create sequence - 1
    set_fact:
      tun_item: "{{item}}"
    with_sequence: start=65001 end="{{tunnel_count|int + 65000}}"
    register: tun_result

  - name: create sequence - 2
    set_fact:
      tuns: "{{tun_result.results|map(attribute='ansible_facts.tun_item')|list}}"

  - include: tunnels.yml
    with_together:
    - "{{tuns}}"
    - "{{groups['honeypot']}}"

  - name: install autossh
    apt:
      name: autossh
      state: latest

  - name: start ssh tunnels
    systemd:
      name: "autossh_{{item}}"
      daemon_reload: yes
      enabled: yes
      state: restarted
    with_items:
    - "{{groups['honeypot']}}"

  - name: install elk
    apt:
      name: "{{item}}"
      state: latest
    with_items:
    - elasticsearch
    - logstash
    - kibana

  - name: start elk
    systemd:
      name: "{{item}}"
      state: started
      enabled: yes
    with_items:
    - elasticsearch
    - logstash
    - kibana
