---

  - name: create files
    file:
      state: touch
      dest: "{{item}}"
    with_items:
    - .Xauthority
    - .hushlogin
    become: "{{ansible_user}}"

  - name: create directories
    file:
      state: directory
      recurse: true
      path: "{{item}}"
    become: "{{ansible_user}}"
    with_items:
    - "{{home}}/.ssh"

  - name: prompt
    lineinfile:
      dest: "{{home}}/.profile"
      line: "PS1='\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '"
    become: "{{ansible_user}}"

  - name: docker apt-key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      state: present

  - name: docker apt-repo
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
      state: present

  - name: install elastic key
    apt_key:
      url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      state: present

  - name: install elastic repo
    apt_repository:
      repo: deb https://artifacts.elastic.co/packages/5.x/apt stable main
      state: present

  - name: update apt-cache
    apt:
      upgrade: dist
      update_cache: yes
      cache_valid_time: 3600

  - name: update system
    apt:
      update_cache: yes
      upgrade: full

  - name: remove packages
    apt:
      name: "{{item}}"
      state: absent
    with_items:
    - augeas-lenses
    - bundler
    - chef
    - chef-zero
    - erubis
    - facter
    - puppet-common
    - ruby
    - ruby1.9.1-dev

  - name: system packages
    apt:
      name: "{{item}}"
      state: latest
    with_items:
    - apt-transport-https
    - ca-certificates
    - default-jre-headless
    - docker-ce
    - git
    - gnupg-curl
    - iftop
    - libssl-dev
    - lsof
    - p0f
    - python-dev
    - python-pip
    - python-virtualenv
    - tmux
    - tree
    - vim
    - xsel

  - name: python packages
    pip:
      name: "{{item}}"
      state: latest
    with_items:
    - pip
    - docker-compose

  - name: create group
    group:
      name: crockpot
      gid: 9999
      state: present

  - name: create user
    user:
      name: crockpot
      group: crockpot
      shell: /bin/bash
      home: /crockpot
      uid: 9999
      state: present

  - name: honeypot directories
    file:
      path: "{{item}}"
      state: directory
      owner: crockpot
      group: crockpot
    with_items:
    - /honeypot
    - /crockpot

  - name: logstash directory
    file:
      path: "{{item}}"
      state: directory
    with_items:
    - /etc/logstash/conf.d
